package com.example.root.sqliteproject;import android.app.Activity;import android.content.Intent;import android.database.Cursor;import android.net.Uri;import android.support.annotation.NonNull;import android.support.v7.widget.CardView;import android.support.v7.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import java.util.LinkedList;import static com.example.root.sqliteproject.DatabaseContract.CONTENT_URI;public class NoteAdapter extends RecyclerView.Adapter<NoteAdapter.NoteViewHolder>{    private Cursor listNotes;    private Activity activity;    public NoteAdapter(Activity activity) {        this.activity = activity;    }    public void setListNotes(Cursor listNotes) {        this.listNotes = listNotes;    }    @NonNull    @Override    public NoteAdapter.NoteViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_note, parent, false);        return new NoteViewHolder(view);    }    @Override    public void onBindViewHolder(@NonNull NoteAdapter.NoteViewHolder holder, int position) {        final Note note = getItem(position);        holder.tvTitle.setText(note.getTitle());        holder.tvDate.setText(note.getDate());        holder.tvDesc.setText(note.getDescription());        holder.note.setOnClickListener(new CustomClickListener(position, new CustomClickListener.OnItemClickCallback() {            @Override            public void onItemClicked(View view, int position) {                Intent intent = new Intent(activity, FormAddUpdateActivity.class);                Uri uri = Uri.parse(CONTENT_URI+"/"+note.getId());                intent.setData(uri);                activity.startActivityForResult(intent, FormAddUpdateActivity.REQUEST_UPDATE);            }        }));    }    @Override    public int getItemCount() {        if (listNotes == null) return 0;        return listNotes.getCount();    }    private Note getItem(int position){        if (!listNotes.moveToPosition(position)) {            throw new IllegalStateException("Position invalid");        }        return new Note(listNotes);    }    public class NoteViewHolder extends RecyclerView.ViewHolder {        TextView tvTitle, tvDesc, tvDate;        CardView note;        public NoteViewHolder(View itemView) {            super(itemView);            tvTitle = (TextView)itemView.findViewById(R.id.tv_title);            tvDesc  = (TextView)itemView.findViewById(R.id.tv_desc);            tvDate  = (TextView)itemView.findViewById(R.id.tv_date);            note    = (CardView)itemView.findViewById(R.id.cv_item);        }    }}