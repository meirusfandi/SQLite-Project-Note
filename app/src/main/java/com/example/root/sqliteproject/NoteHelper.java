package com.example.root.sqliteproject;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import java.sql.SQLException;import java.util.ArrayList;import static android.provider.BaseColumns._ID;import static com.example.root.sqliteproject.DatabaseContract.NoteColumns.DATE;import static com.example.root.sqliteproject.DatabaseContract.NoteColumns.DESCRIPTION;import static com.example.root.sqliteproject.DatabaseContract.NoteColumns.TITLE;import static com.example.root.sqliteproject.DatabaseContract.TABLE_NOTE;public class NoteHelper {    private static String DB_TABLE = TABLE_NOTE;    private Context context;    private DatabaseHelper databaseHelper;    private SQLiteDatabase database;    public NoteHelper(Context context) {        this.context = context;    }    public void close(){        databaseHelper.close();    }    public NoteHelper open() throws SQLException {        databaseHelper  = new DatabaseHelper(context);        database        = databaseHelper.getWritableDatabase();        return this;    }    public ArrayList<Note> query(){        ArrayList<Note> arrayList = new ArrayList<>();        Cursor cursor = database.query(DB_TABLE, null, null, null, null, null, _ID+" DESC", null);        cursor.moveToFirst();        Note note;        if (cursor.getCount() > 0){            do {                note = new Note();                note.setId(cursor.getInt(cursor.getColumnIndexOrThrow(_ID)));                note.setTitle(cursor.getString(cursor.getColumnIndexOrThrow(TITLE)));                note.setDescription(cursor.getString(cursor.getColumnIndexOrThrow(DESCRIPTION)));                note.setDate(cursor.getString(cursor.getColumnIndexOrThrow(DATE)));                arrayList.add(note);                cursor.moveToNext();            } while (!cursor.isAfterLast());        }        cursor.close();        return arrayList;    }    public long insert(Note note){        ContentValues values = new ContentValues();        values.put(TITLE, note.getTitle());        values.put(DESCRIPTION, note.getDescription());        values.put(DATE, note.getDate());        return database.insert(DB_TABLE, null, values);    }    public int update(Note note){        ContentValues values = new ContentValues();        values.put(TITLE, note.getTitle());        values.put(DESCRIPTION, note.getDescription());        values.put(DATE, note.getDate());        return database.update(DB_TABLE, values, _ID +" = '"+note.getId()+"'", null);    }    public int delete(int id){        return database.delete(TABLE_NOTE,_ID+" = '"+id+"'", null);    }}