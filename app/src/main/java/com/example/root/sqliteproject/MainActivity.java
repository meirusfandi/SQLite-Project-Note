package com.example.root.sqliteproject;import android.content.Intent;import android.database.Cursor;import android.os.AsyncTask;import android.support.design.widget.FloatingActionButton;import android.support.design.widget.Snackbar;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.view.View;import android.widget.ProgressBar;import java.sql.SQLException;import java.util.ArrayList;import java.util.LinkedList;import static com.example.root.sqliteproject.DatabaseContract.CONTENT_URI;import static com.example.root.sqliteproject.FormAddUpdateActivity.REQUEST_UPDATE;public class MainActivity extends AppCompatActivity implements View.OnClickListener{    RecyclerView recyclerView;    ProgressBar progressBar;    FloatingActionButton fab;    private Cursor listdata;    private NoteAdapter adapter;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        getSupportActionBar().setTitle("Notes");        recyclerView    = (RecyclerView)findViewById(R.id.recycler);        recyclerView.setLayoutManager(new LinearLayoutManager(this));        recyclerView.setHasFixedSize(true);        progressBar     = (ProgressBar)findViewById(R.id.progress);        fab             = (FloatingActionButton)findViewById(R.id.fab_add);        fab.setOnClickListener(this);        adapter         = new NoteAdapter(this);        adapter.setListNotes(listdata);        recyclerView.setAdapter(adapter);        new LoadAsync().execute();    }    @Override    public void onClick(View v) {        if (v.getId() == R.id.fab_add){            Intent intent = new Intent(MainActivity.this, FormAddUpdateActivity.class);            startActivityForResult(intent, FormAddUpdateActivity.REQUEST_ADD);        }    }    protected void onResume() {        super.onResume();    }    private class LoadAsync extends AsyncTask<Void, Void, Cursor> {        protected void onPreExecute(){            super.onPreExecute();            progressBar.setVisibility(View.VISIBLE);        }        protected void onPostExecute(Cursor notes){            super.onPostExecute(notes);            progressBar.setVisibility(View.GONE);            listdata = notes;            adapter.setListNotes(listdata);            adapter.notifyDataSetChanged();            if (listdata.getCount() == 0){                showSnackBar("Tidak ada data saat ini");            }        }        @Override        protected Cursor doInBackground(Void... voids) {            return getContentResolver().query(CONTENT_URI, null, null, null, null);        }    }    protected void onActivityResult(int requestCode, int resultCode, Intent intent){        super.onActivityResult(requestCode, resultCode, intent);        if (requestCode == FormAddUpdateActivity.REQUEST_ADD){            if (resultCode == FormAddUpdateActivity.RESULT_ADD){                new LoadAsync().execute();                showSnackBar("Satu item berhasil ditambahkan");            }        }        else if (requestCode == REQUEST_UPDATE) {            if (resultCode == FormAddUpdateActivity.RESULT_UPDATE) {                new LoadAsync().execute();                showSnackBar("Satu item berhasil diubah");            }            else if (resultCode == FormAddUpdateActivity.RESULT_DELETE) {                new LoadAsync().execute();                showSnackBar("Satu item berhasil dihapus");            }        }    }    protected void onDestroy() {        super.onDestroy();    }    private void showSnackBar(String message){        Snackbar.make(recyclerView, message, Snackbar.LENGTH_LONG).show();    }}