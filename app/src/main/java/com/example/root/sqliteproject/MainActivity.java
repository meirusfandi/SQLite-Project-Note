package com.example.root.sqliteproject;import android.content.Intent;import android.os.AsyncTask;import android.support.design.widget.FloatingActionButton;import android.support.design.widget.Snackbar;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.view.View;import android.widget.ProgressBar;import java.sql.SQLException;import java.util.ArrayList;import java.util.LinkedList;public class MainActivity extends AppCompatActivity implements View.OnClickListener{    RecyclerView recyclerView;    ProgressBar progressBar;    FloatingActionButton fab;    private LinkedList<Note> list;    private NoteAdapter adapter;    private NoteHelper helper;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        getSupportActionBar().setTitle("Notes");        recyclerView    = (RecyclerView)findViewById(R.id.recycler);        recyclerView.setLayoutManager(new LinearLayoutManager(this));        recyclerView.setHasFixedSize(true);        progressBar     = (ProgressBar)findViewById(R.id.progress);        fab             = (FloatingActionButton)findViewById(R.id.fab_add);        fab.setOnClickListener(this);        helper = new NoteHelper(this);        try {            helper.open();        } catch (SQLException e) {            e.printStackTrace();        }        list = new LinkedList<>();        adapter         = new NoteAdapter(this);        adapter.setLinkedList(list);        recyclerView.setAdapter(adapter);        new LoadAsync().execute();    }    @Override    public void onClick(View v) {        if (v.getId() == R.id.fab_add){            Intent intent = new Intent(MainActivity.this, FormAddUpdateActivity.class);            startActivityForResult(intent, FormAddUpdateActivity.REQUEST_ADD);        }    }    protected void onResume() {        super.onResume();    }    private class LoadAsync extends AsyncTask<Void, Void, ArrayList<Note>> {        protected void onPreExecute(){            super.onPreExecute();            progressBar.setVisibility(View.VISIBLE);            if (list.size() > 0){                list.clear();            }        }        protected void onPostExecute(ArrayList<Note> notes){            super.onPostExecute(notes);            progressBar.setVisibility(View.GONE);            list.addAll(notes);            adapter.setLinkedList(list);            adapter.notifyDataSetChanged();            if (list.size() == 0){                showSnackBar("Tidak ada data saat ini");            }        }        @Override        protected ArrayList<Note> doInBackground(Void... voids) {            return helper.query();        }    }    protected void onActivityResult(int requestCode, int resultCode, Intent intent){        super.onActivityResult(requestCode, resultCode, intent);        if (requestCode == FormAddUpdateActivity.REQUEST_ADD){            if (resultCode == FormAddUpdateActivity.RESULT_ADD){                new LoadAsync().execute();                showSnackBar("Satu item berhasil di tambahkan");                recyclerView.getLayoutManager().smoothScrollToPosition(recyclerView, new RecyclerView.State(), 0);            }        } else if (requestCode == FormAddUpdateActivity.REQUEST_UPDATE){            if (resultCode == FormAddUpdateActivity.RESULT_UPDATE){                new LoadAsync().execute();                showSnackBar("Satu item berhasil diubah");                int position = intent.getIntExtra(FormAddUpdateActivity.EXTRA_POSITION, 0);                recyclerView.getLayoutManager().smoothScrollToPosition(recyclerView, new RecyclerView.State(), position);            } else if (resultCode == FormAddUpdateActivity.RESULT_DELETE){                int position = intent.getIntExtra(FormAddUpdateActivity.EXTRA_POSITION, 0);                list.remove(position);                adapter.setLinkedList(list);                adapter.notifyDataSetChanged();                showSnackBar("Satu item berhasil dihapus");            }        }    }    protected void onDestroy() {        super.onDestroy();        if (helper != null){            helper.close();        }    }    private void showSnackBar(String message){        Snackbar.make(recyclerView, message, Snackbar.LENGTH_LONG).show();    }}